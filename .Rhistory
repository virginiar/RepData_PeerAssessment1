paste("Hello", "world!", sep = " ")
paste(c(1, 2, 3), c("X", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
myData <- sample(c(y, z), 100)
myNA <- is.na(myData)
myNA
myData == NA
sum(myNA)
myData
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[x(-2, -10)]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
3
info()
vect["bar"]
vect[c("foo", "bar")]
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4, 5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix
myMatrix2 <- matrix(1:20, 4, 5)
identical(myMatrix, myMatrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, myMatrix)
myData <- data.frame(patients, myMatrix)
myData
class(myData)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(myData)
colnames(myData) <- cnames
myData
5+7
x <- 4L
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3,5)
y <- c(3,2,10)
x
y
cbind(x, y)
x <- list(2,"a","b", TRUE)
x[[2]]
y <- x[[2]]
class(y)
x <- 1:4
y <- 2:3
x + y
z <- x + y
class(z)
x <- c(17, 14,4,5,13,12,10)
x[x] > 10 == 4
x[x > 10] == 4
x
x[ x > 10] < -4
x
x[x == 10] <- 4
x
x <- c(17, 14,4,5,13,12,10)
x
x[x > 10] <- 4
x
con <- gzfile("Programas R\rprog-data-quiz1_data.zip")
con
x <- readLines(con)
?readLines
x <- readLines(con, -1)
con2 <- gzfile("rprog-data-quiz1_data.zip")
con2
x <- readLines(con, 10)
x <- readLines(con2, 10)
x <- readLines(con2, -1)
hw1_data <- read.csv("~/Programas R/hw1_data.csv", dec=",")
View(hw1_data)
hw1_data
hw1_data[:2]
hw1_data[1:2]
hw1_data[1:2,]
nrow(hw1_data)
hw1_data[-2:-1,]
hw1_data[152:153,]
hw1_data[47]
hw1_data[47, 1]
hw1_data[47, ]
oz <- is.na(hw1_data, 1)
is.na?
exit
?is.na
limp <- is.na(hw1_data)
limp
?sum
oz <- limp[1:153, 1]
oz
sum(oz)
?colSums
colSums(hw1_data,na.rm=FALSE,1)
colSums(hw1_data,na.rm=FALSE)
colMeans(hw1_data)
?mean
data_clean <-h1w_data[!is.na(data$ozone), ]
data_clean <- h1w_data[!is.na(data$ozone), ]
hw1_data
data_clean <- h1w_data[!is.na(h1w_data$ozone), ]
is.na(h1W_data$ozone)
is.na(h1W_data)
data_clean <- hw1_data[!is.na(hw1_data$ozone), ]
data_clean
hw1_data
limp
is.na(hw1_data$Ozone)
oz
data_clean <- hw1_data[ !is.na(hw1_data)]
data_clean
hw1_data[$Ozone]
hw1_data$Ozone
oz <- hw1_data$Ozone
oz
oz_clean <- o<[! is.na[oz]]
oz_clean <- oz[! is.na[oz]]
oz_clean <- oz[! is.na(oz)]
oz_clean
mean(oz_clean)
subset <- hw1_data[hw1_data$Ozone > 31 & hw1_data$Temp > 90]
subset <- hw1_data[hw1_data$Ozone > 31 & hw1_data$Temp > 90, ]
subset
hw1_data[hw1_data$Ozone > 31 & hw1_data$Temp > 90, ]
hw1_data[hw1_data$Ozone > 31, ]
hw1_data
hw1_data[!is.na(hw1_data) & hw1_data$Ozone > 31]
hw1_data[!is.na(hw1_data) & hw1_data$Ozone > 31,]
is.na(hw1_data)
hw1_data[!is.na(hw1_data),]
hw1_data
hw1_data[!is.na(hw1_data$Ozone),]
hw1_data[!is.na(hw1_data$Ozone) & hw1_data$Ozone > 31,]
hw1_data[!is.na(hw1_data$Ozone) & hw1_data$Ozone > 31 & hw1_data$Temp > 90,]
hw1_data[hw1_data$Ozone > 31 & hw1_data$Temp > 90,]
hw1_data[!is.na(hw1_data$Ozone) & hw1_data$Ozone > 31 & hw1_data$Temp > 90,]
data_Solar <- hw1_data[!is.na(hw1_data$Ozone) & hw1_data$Ozone > 31 & hw1_data$Temp > 90,]
data_solar
data_Solar
mean(data_Solar$Solar.R)
hw1_data[hw1_data$Moth == 5]
hw1_data[hw1_data$Moth == 5,]
hw1_data[hw1_data$Moth > 5,]
hw1_data[hw1_data$Month == 5,]
?max
may <- hw1_data[hw1_data$Month == 5,]
max(may$Ozone)
may$Ozone
max(may$Ozone, na.rm=FALSE)
max(may$Ozone, na.rm=TRUE)
x <- 4
class(x)
x
x <- c(4, TRUE)
class(x)
x
x <- c(1,3,5)
y <- c(3,2,10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
X[[1]]
x[[1]]
y <- x[[1]]
class(y)
x <- 1:4
y <- 2
x + y
hw1_data
hw1_data[hw1_data$Month == 6]
hw1_data[hw1_data$Month == 6,]
june <- hw1_data[hw1_data$Month == 6,]
june
mean(june$Temp)
install.packages("XML")
library(XML)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
zip <- xpathSApply(doc, "//zipcode", xmlValue)
zip
zip[zip==21231]
data <- read.csv("C:\\Users\\Virgi\\AppData\\Local\\Temp\\Rtmp8EAfMZ\\data14c032ff6066")
View(data)
fileUrl = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileUrl, "./Rcursos/question5.csv")
?fread
library(data.table)
install.packages("data.table")
library(data.table)
?fread
DT = fread("./Rcursos/question5.csv")
DT
tables()
mean(DT$pwgtp15, by=DT$SEX)
system.time(mean(DT$pwgtp15, by=DT$SEX))
system.time(mean(DT$pwgtp15, by=DT$SEX))
data <- read.csv("C:\\Users\\Virgi\\AppData\\Local\\Temp\\RtmpSia6xP\\datab1c4eec311a", header=F)
View(data)
DT <- fread(data)
library(data.table)
DT = fread(data)
?fread
data
fread(data)
library(data.table)
?fread
DT = fread(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv)
DT = fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
mean(DT$pwgtp15,by=DT$SEX)
tapply(DT$pwgtp15,DT$SEX, mean)
mean(DT[DT$SEX == 1,]$pwgtp15);mean(DT[DT$SEX ==2,]$pwgtp15)
sapply(split(DT$pwgtp15,DT$SEX),mean)
rowMean(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2]
rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2]
DT[,mean(pwgtp15),by=SEX]
tables()
?solve
?inverse
a <- matrix([2,1,5,3], nrow=2, ncol=2)
a <- matrix(2,1,5,3, nrow=2, ncol=2)
x <- [2,1,5,3]
x <- 1:3
x
z <- 1,2,3
a <- matrix(nrow=2, ncol= 2)
a
a[1,1] <- 2
a[1,2] <- 1
a[2,1] <- 5
a[2,2] <- 3
a
solve(a)
a <- c(2,1,5,3)
m <- matrix(a, nrow=2, ncol=2)
m
b <- makeCacheMatrix(a)
source('D:/DATOS/VIRGINIA/CURSOS 2014/COURSERA/R Programming/Week3/Assigment/ProgrammingAssignment2/cachematrix.R')
b <- makeCacheMatrix(a)
b
class(b)
class(b$get)
b$get
b <- makeCacheMatrix(m)
b
b$get
print(b$get)
c <- cachemean(b)
c <- cacheSolve(b)
c
m
c <- cacheSolve(b)
c
load("~/Rcursos/prueba/project/.RData")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
weekdatys(sampleTimes)
weekdays(sampleTimes)
year(sampleTimes)
years(sampleTimes)
help(months)
yearformat <- grep("^2012", sampleTimes)
yearformat
yearformat <- format(sampleTimes,"%Y")
yearformat
year[yearformat == "2012"]
year <- yearformat[yearformat == "2012"]
year
length(year)
str(year)
dayformat <- format(sampleTimes, "%Y %a")
dayformat
day <- dayformat[dayformat == "2012 lun"]
length(day)
install.packages("knitr")
unzip("activity.zip")
activity <- read.csv("activity.csv")
setwd("~/")
activity <- read.csv("activity.csv")
help rowsum
help(rowsum)
setwd("D:/DATOS/VIRGINIA/CURSOS 2014/COURSERA/Reproducible Research/Week 2/Assessment/RepData_PeerAssessment1")
activity <- read.csv("activity.csv", colClasses=c("numeric","Date","integer"))
summary(activity)
dailysteps <- rowsum(activity$steps, activity$date)
View(dailysteps)
View(dailysteps)
dailysteps <- rowsum(activity$steps, activity$date, na.rm=TRUE)
View(dailysteps)
View(dailysteps)
dailysteps <- rowsum(activity$steps, activity$date)
View(dailysteps)
View(dailysteps)
dailysteps1 <- rowsum(activity$steps, activity$date)
View(dailysteps1)
View(dailysteps1)
dailysteps1 <- rowsum(activity$steps, activity$date, na.rm=TRUE)
View(dailysteps1)
View(dailysteps1)
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps")
dailySteps <- rowsum(activity$steps, activity$date)
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps")
View(dailysteps1)
View(dailysteps1)
summary(dailySteps)
meltData <- melt(activity, id.vars=c("date","interval"))
dailySteps <- aggregate(activity$steps ~activity$date, activity, sum)
View(dailySteps)
View(dailySteps)
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps")
View(dailySteps)
View(dailySteps)
activity <- read.csv("activity.csv")
summary(activity)
dailySteps <- aggregate(activity$steps ~activity$date, activity, sum)
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps")
dailySteps <- aggregate(activity$steps ~ as.Date(activity$date), activity, sum)
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps")
dailySteps <- with(activity, tapply(steps, as.Date(date), sum))
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps")
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps", col="blue")
with(activity,
dailySteps <- as.numeric(dailySteps)
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps", col="blue")
dailySteps <- as.numeric(dailySteps)
dailySteps <- tapply(activity$steps, activity$data, sum)
dailySteps <- as.numeric(dailySteps)
dailySteps <- tapply(activity$steps, activity$date, sum)
dailySteps <- as.numeric(dailySteps)
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps", col="blue")
library(ggplot2)
calc_steps <- function(tbl) {
steps_per_day <- aggregate(steps ~ date, tbl, sum)
colnames(steps_per_day) <- c("date", "steps")
steps_per_day
}
plot_steps <- function(steps_per_day, mean, median) {
col_labels=c(paste("Mean:", mean), paste("Median:", median))
cols = c("green", "yellow")
ggplot(steps_per_day, aes(x=steps)) +
geom_histogram(fill="steelblue", binwidth=1500) +
geom_point(aes(x=mean, y=0, color="green"), size=4, shape=15) +
geom_point(aes(x=median, y=0, color="yellow"), size=4, shape=15) +
scale_color_manual(name=element_blank(), labels=col_labels, values=cols) +
labs(title="Steps per Day", x="Number of Steps", y="Day") +
theme_bw() + theme(legend.position = "bottom")
}
steps_per_day <- calc_steps(tbl)
mean_steps = round(mean(steps_per_day$steps), 2)
median_steps = round(median(steps_per_day$steps), 2)
plot_steps(steps_per_day, mean, median)
library(ggplot2)
calc_steps <- function(activity) {
steps_per_day <- aggregate(steps ~ date, activity, sum)
colnames(steps_per_day) <- c("date", "steps")
steps_per_day
}
plot_steps <- function(steps_per_day, mean, median) {
col_labels=c(paste("Mean:", mean), paste("Median:", median))
cols = c("green", "yellow")
ggplot(steps_per_day, aes(x=steps)) +
geom_histogram(fill="steelblue", binwidth=1500) +
geom_point(aes(x=mean, y=0, color="green"), size=4, shape=15) +
geom_point(aes(x=median, y=0, color="yellow"), size=4, shape=15) +
scale_color_manual(name=element_blank(), labels=col_labels, values=cols) +
labs(title="Steps per Day", x="Number of Steps", y="Day") +
theme_bw() + theme(legend.position = "bottom")
}
steps_per_day <- calc_steps(activity)
mean_steps = round(mean(steps_per_day$steps), 2)
median_steps = round(median(steps_per_day$steps), 2)
plot_steps(steps_per_day, mean, median)
View(activity)
View(activity)
activity$date <- as.Date(activity$data, format="%Y-%m-%d")
summary(activity)
library(ggplot2)
library(ggplot2)
calc_steps <- function(activity) {
steps_per_day <- aggregate(steps ~ date, activity, sum)
colnames(steps_per_day) <- c("date", "steps")
steps_per_day
}
plot_steps <- function(steps_per_day, mean, median) {
col_labels=c(paste("Mean:", mean), paste("Median:", median))
cols = c("green", "yellow")
ggplot(steps_per_day, aes(x=steps)) +
geom_histogram(fill="steelblue", binwidth=1500) +
geom_point(aes(x=mean, y=0, color="green"), size=4, shape=15) +
geom_point(aes(x=median, y=0, color="yellow"), size=4, shape=15) +
scale_color_manual(name=element_blank(), labels=col_labels, values=cols) +
labs(title="Steps per Day", x="Number of Steps", y="Day") +
theme_bw() + theme(legend.position = "bottom")
}
steps_per_day <- calc_steps(activity)
mean_steps = round(mean(steps_per_day$steps), 2)
median_steps = round(median(steps_per_day$steps), 2)
plot_steps(steps_per_day, mean, median)
library(ggplot2)
calc_steps <- function(activity) {
steps_per_day <- aggregate(steps ~ date, activity, sum)
colnames(steps_per_day) <- c("date", "steps")
steps_per_day
}
plot_steps <- function(steps_per_day, mean, median) {
#col_labels=c(paste("Mean:", mean), paste("Median:", median))
cols = c("green", "yellow")
ggplot(steps_per_day, aes(x=steps)) +
geom_histogram(fill="steelblue", binwidth=1500) +
geom_point(aes(x=mean, y=0, color="green"), size=4, shape=15) +
geom_point(aes(x=median, y=0, color="yellow"), size=4, shape=15) +
scale_color_manual(name=element_blank(), labels=col_labels, values=cols) +
labs(title="Steps per Day", x="Number of Steps", y="Day") +
theme_bw() + theme(legend.position = "bottom")
}
steps_per_day <- calc_steps(activity)
mean_steps = round(mean(steps_per_day$steps), 2)
median_steps = round(median(steps_per_day$steps), 2)
plot_steps(steps_per_day, mean, median)
#dailySteps <- with(activity, tapply(steps, as.Date(date), sum))
dailySteps <- tapply(activity$steps, activity$date, sum)
dailySteps <- as.numeric(dailySteps)
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps", col="blue")
#dailySteps <- with(activity, tapply(steps, as.Date(date), sum))
dailySteps <- tapply(activity$steps, activity$date, sum)
dailySteps <- as.numeric(dailySteps)
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps", col="blue")
#dailySteps <- with(activity, tapply(steps, as.Date(date), sum))
dailySteps <- tapply(activity$steps, activity$date, sum)
dailySteps <- as.numeric(dailySteps)
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps", col="blue")
dailySteps <- tapply(activity$steps, activity$date, sum)
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps", col="blue")
dailySteps <- tapply(activity$steps, activity$date, sum)
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps", col="blue")
dailySteps <- tapply(activity$steps, activity$date, sum, na.rm=TRUE)
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps", col="blue")
dailySteps <- tapply(activity$steps, activity$date, sum)
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps", col="blue")
mean <- mean(dailySteps$steps, na.rm=TRUE)
View(dailysteps)
View(dailysteps)
mean <- mean(dailySteps, na.rm=TRUE)
median <- median(dailySteps, na.rm=TRUE)
```
data$interval), mean, na.rm=TRUE)
averageDaily <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval), mean, na.rm=TRUE)
averageDaily <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval), mean, na.rm=TRUE)
averageDaily <- aggregate(x=list(steps=activity$steps), by=list(interval=activity$interval), mean, na.rm=TRUE)
View(averageDaily)
View(averageDaily)
help(hist)
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps", col="blue",breaks=50)
View(dailysteps)
View(dailysteps)
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps", col="blue",breaks=61)
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps", col="blue",breaks=61)
hist(dailySteps, main="Total number of steps per day", xlab="Date",ylab="Total Steps", col="blue",breaks=61)
View(activity)
View(activity)
averageDaily <- tapply(activity$steps, activity$interval, mean, na.rm=TRUE)
plot(steps ~ interval, data=averageDaily, xlab="Intervals", ylab="Average Steps", main="Average daily activity",type="l", col="blue")
ggregate(x=list(steps=activity$steps), by=list(interval=activity$interval), mean, na.rm=TRUE)
help(Sys.setlocale)
Sys.getlocale()
Sys.setlocale("LC_TIME","English United States")
day <- weekdays(newdata$date)
newdata <- activity
missingD <- newdata$interval[missing]
filled <- numeric()
for(id in 1:nrow(averageDaily)){
filled[missingD %in% averageDaily$interval[id]] <- averageDaily$steps[id]
}
newdata$steps[missing] <- filled
